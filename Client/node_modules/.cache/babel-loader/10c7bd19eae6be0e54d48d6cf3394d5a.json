{"ast":null,"code":"var _jsxFileName = \"D:\\\\Temp\\\\Code_Playground\\\\HTML\\\\Productive-Muslim\\\\Client\\\\src\\\\components\\\\Authentication\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"./firebase\";\nimport firebase from \"firebase/compat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n\n  function signInWithGoogle() {\n    return auth.signInWithPopup(googleProvider);\n    const user = res.user;\n  }\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n    signInWithGoogle\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/Temp/Code_Playground/HTML/Productive-Muslim/Client/src/components/Authentication/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","firebase","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","user","res","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","unsubscribe","onAuthStateChanged","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAOP,UAAU,CAACK,WAAD,CAAjB;AACD;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMa,cAAc,GAAG,IAAIV,QAAQ,CAACD,IAAT,CAAcY,kBAAlB,EAAvB;;AAEF,WAASC,gBAAT,GAA4B;AAE1B,WAAOb,IAAI,CAACc,eAAL,CAAqBH,cAArB,CAAP;AACA,UAAMI,IAAI,GAAGC,GAAG,CAACD,IAAjB;AACD;;AAED,WAASE,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC/B,WAAOnB,IAAI,CAACoB,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,CAAP;AACD;;AAED,WAASE,KAAT,CAAeH,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,WAAOnB,IAAI,CAACsB,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC,CAAP;AACD;;AAED,WAASI,MAAT,GAAkB;AAChB,WAAOvB,IAAI,CAACwB,OAAL,EAAP;AACD;;AAED,WAASC,aAAT,CAAuBP,KAAvB,EAA8B;AAC5B,WAAOlB,IAAI,CAAC0B,sBAAL,CAA4BR,KAA5B,CAAP;AACD;;AAED,WAASS,WAAT,CAAqBT,KAArB,EAA4B;AAC1B,WAAOX,WAAW,CAACoB,WAAZ,CAAwBT,KAAxB,CAAP;AACD;;AAED,WAASU,cAAT,CAAwBT,QAAxB,EAAkC;AAChC,WAAOZ,WAAW,CAACqB,cAAZ,CAA2BT,QAA3B,CAAP;AACD;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM8B,WAAW,GAAG7B,IAAI,CAAC8B,kBAAL,CAAwBf,IAAI,IAAI;AAClDP,MAAAA,cAAc,CAACO,IAAD,CAAd;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHmB,CAApB;AAKA,WAAOmB,WAAP;AACD,GAPQ,EAON,EAPM,CAAT;AASA,QAAME,KAAK,GAAG;AACZxB,IAAAA,WADY;AAEZc,IAAAA,KAFY;AAGZJ,IAAAA,MAHY;AAIZM,IAAAA,MAJY;AAKZE,IAAAA,aALY;AAMZE,IAAAA,WANY;AAOZC,IAAAA,cAPY;AAQZf,IAAAA;AARY,GAAd;AAWA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEkB,KAA7B;AAAA,cACG,CAACtB,OAAD,IAAYH;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKC;;IA7DeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"./firebase\";\r\nimport firebase from \"firebase/compat\"\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nfunction signInWithGoogle() {\r\n  \r\n  return auth.signInWithPopup(googleProvider)\r\n  const user = res.user;\r\n}\r\n\r\nfunction signup(email, password) {\r\n  return auth.createUserWithEmailAndPassword(email, password)\r\n}\r\n\r\nfunction login(email, password) {\r\n  return auth.signInWithEmailAndPassword(email, password)\r\n}\r\n\r\nfunction logout() {\r\n  return auth.signOut()\r\n}\r\n\r\nfunction resetPassword(email) {\r\n  return auth.sendPasswordResetEmail(email)\r\n}\r\n\r\nfunction updateEmail(email) {\r\n  return currentUser.updateEmail(email)\r\n}\r\n\r\nfunction updatePassword(password) {\r\n  return currentUser.updatePassword(password)\r\n}\r\n\r\nuseEffect(() => {\r\n  const unsubscribe = auth.onAuthStateChanged(user => {\r\n    setCurrentUser(user)\r\n    setLoading(false)\r\n  })\r\n\r\n  return unsubscribe\r\n}, [])\r\n\r\nconst value = {\r\n  currentUser,\r\n  login,\r\n  signup,\r\n  logout,\r\n  resetPassword,\r\n  updateEmail,\r\n  updatePassword,\r\n  signInWithGoogle\r\n}\r\n\r\nreturn (\r\n  <AuthContext.Provider value={value}>\r\n    {!loading && children}\r\n  </AuthContext.Provider>\r\n)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}