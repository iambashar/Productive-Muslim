{"ast":null,"code":"var _jsxFileName = \"D:\\\\Temp\\\\Code_Playground\\\\HTML\\\\Productive-Muslim\\\\Client\\\\src\\\\components\\\\Authentication\\\\UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { InputGroup, Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"./AuthContext\";\nimport \"./UpdateProfile.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport firebase from 'firebase/compat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst eye = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faEye\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 13\n}, this);\n\nconst eyeclose = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faEyeSlash\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 18\n}, this);\n\nexport default function UpdateProfile() {\n  _s();\n\n  const nameRef = useRef();\n  const madhabRef = useRef();\n  const countryRef = useRef();\n  const cityRef = useRef();\n  var name, country, city, madhab;\n  const {\n    currentUser\n  } = useAuth();\n  const [user, setUser] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    var link = \"http://127.0.0.1:3000/userprofile/\".concat(currentUser.uid);\n    fetch(link).then(res => res.json()).then(result => {\n      setUser(result.data.user.user);\n    });\n    console.log(user);\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (user.name != nameRef || user.madhab != madhabRef || user.country != countryRef || user.city != cityRef) {\n      var uid = currentUser.uid;\n      var name = nameRef;\n      var email = currentUser.email;\n      var madhab = madhabRef;\n      var country = countryRef;\n      var city = cityRef;\n      console.log(uid, name, email, madhab, country, city);\n      promises.push(fetch('http://localhost:3000/updateuser/'.concat(currentUser.uid), {\n        method: 'POST',\n        body: JSON.stringify({\n          uid,\n          name,\n          email,\n          madhab,\n          country,\n          city\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }));\n    }\n\n    Promise.all(promises).then(() => {\n      history.push(\"/\");\n    }).catch(() => {\n      setError(\"Failed to update account\");\n    }).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"emotionBox2\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center mb-4\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ref: nameRef // required\n              // defaultValue={user.name}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Madhab\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ref: madhabRef // required\n              // defaultValue={user.madhab}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ref: countryRef // required\n              // defaultValue={user.country}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ref: cityRef // required\n              // defaultValue={user.city}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 text-center mt-2\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(UpdateProfile, \"EmTAi+prBVrKZ7hGldRD21YcI6s=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["D:/Temp/Code_Playground/HTML/Productive-Muslim/Client/src/components/Authentication/UpdateProfile.js"],"names":["React","useEffect","useRef","useState","InputGroup","Form","Button","Card","Alert","useAuth","Link","useHistory","FontAwesomeIcon","faEye","faEyeSlash","firebase","eye","eyeclose","UpdateProfile","nameRef","madhabRef","countryRef","cityRef","name","country","city","madhab","currentUser","user","setUser","error","setError","loading","setLoading","history","link","concat","uid","fetch","then","res","json","result","data","console","log","handleSubmit","e","preventDefault","promises","email","push","method","body","JSON","stringify","headers","Promise","all","catch","finally"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\r\nimport { InputGroup, Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"./AuthContext\"\r\nimport \"./UpdateProfile.css\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport firebase from 'firebase/compat';\r\nconst eye = <FontAwesomeIcon icon={faEye} />;\r\nconst eyeclose = <FontAwesomeIcon icon={faEyeSlash} />;\r\n\r\nexport default function UpdateProfile() {\r\n  const nameRef = useRef()\r\n  const madhabRef = useRef()\r\n  const countryRef = useRef()\r\n  const cityRef = useRef()\r\n  var name, country, city, madhab;\r\n  const { currentUser } = useAuth()\r\n  const [user, setUser] = useState([])\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    var link = \"http://127.0.0.1:3000/userprofile/\".concat(currentUser.uid);\r\n    fetch(link)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setUser(result.data.user.user);\r\n        }\r\n      );\r\n      console.log(user);\r\n  }, []);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (user.name != nameRef || user.madhab != madhabRef ||\r\n      user.country != countryRef || user.city != cityRef) {\r\n      var uid = currentUser.uid;\r\n      var name = nameRef;\r\n      var email = currentUser.email;\r\n      var madhab = madhabRef;\r\n      var country = countryRef;\r\n      var city = cityRef;\r\n      console.log(uid, name, email, madhab, country, city);\r\n      promises.push(\r\n        fetch('http://localhost:3000/updateuser/'.concat(currentUser.uid), {\r\n          method: 'POST',\r\n          body: JSON.stringify({ uid, name, email, madhab, country, city }),\r\n          headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n          }\r\n        })\r\n      )\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\")\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"emotionBox2\">\r\n        <Card.Body>\r\n          <h1 className=\"text-center mb-4\">Update Profile</h1>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                ref={nameRef}\r\n                // required\r\n                // defaultValue={user.name}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"name\">\r\n              <Form.Label>Madhab</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                ref={madhabRef}\r\n                // required\r\n                // defaultValue={user.madhab}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"name\">\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                ref={countryRef}\r\n                // required\r\n                // defaultValue={user.country}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"name\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                ref={cityRef}\r\n                // required\r\n                // defaultValue={user.city}\r\n              />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-2\">\r\n            <Link to=\"/\">Cancel</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}