{"ast":null,"code":"var _jsxFileName = \"D:\\\\Temp\\\\Code_Playground\\\\HTML\\\\Productive-Muslim\\\\Client\\\\src\\\\components\\\\Authentication\\\\UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { InputGroup, Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"./AuthContext\";\nimport \"./UpdateProfile.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport firebase from 'firebase/compat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst eye = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faEye\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 13\n}, this);\n\nconst eyeclose = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faEyeSlash\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 18\n}, this);\n\nexport default function UpdateProfile() {\n  _s();\n\n  const nameRef = useRef();\n  const madhabRef = useRef();\n  const countryRef = useRef();\n  const cityRef = useRef();\n  const {\n    currentUser\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  useEffectuseEffect(() => {\n    var link = \"http://127.0.0.1:3000/user/\";\n    link = link.concat(selectedEmotion.target.outerText).toLowerCase();\n    document.getElementById(\"dropdown-basic\").innerHTML = selectedEmotion.target.outerText;\n    fetch(link).then(res => res.json()).then(result => {\n      setDisplayDuaInfos(result.data.duas);\n    });\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises).then(() => {\n      history.push(\"/\");\n    }).catch(() => {\n      setError(\"Failed to update account\");\n    }).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"emotionBox2\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center mb-4\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ref: nameRef,\n              required: true,\n              defaultValue: currentUser.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"pass-wrapper\",\n              type: passwordShown ? \"text\" : \"password\",\n              ref: passwordRef,\n              placeholder: \"Leave blank to keep the same\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: togglePasswordVisiblity,\n                  children: passwordShown ? eye : eyeclose\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"pass-wrapper\",\n              type: passwordShown ? \"text\" : \"password\",\n              ref: passwordConfirmRef,\n              placeholder: \"Leave blank to keep the same\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: togglePasswordVisiblity,\n                  children: passwordShown ? eye : eyeclose\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 text-center mt-2\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(UpdateProfile, \"d90+4hU2UH++jmD4Gzt2luyoK3M=\", true, function () {\n  return [useAuth, useHistory];\n});\n\n_c = UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["D:/Temp/Code_Playground/HTML/Productive-Muslim/Client/src/components/Authentication/UpdateProfile.js"],"names":["React","useEffect","useRef","useState","InputGroup","Form","Button","Card","Alert","useAuth","Link","useHistory","FontAwesomeIcon","faEye","faEyeSlash","firebase","eye","eyeclose","UpdateProfile","nameRef","madhabRef","countryRef","cityRef","currentUser","error","setError","loading","setLoading","history","useEffectuseEffect","link","concat","selectedEmotion","target","outerText","toLowerCase","document","getElementById","innerHTML","fetch","then","res","json","result","setDisplayDuaInfos","data","duas","handleSubmit","e","preventDefault","promises","emailRef","current","value","email","push","updateEmail","passwordRef","updatePassword","Promise","all","catch","finally","togglePasswordVisiblity","setPasswordShown","passwordShown","passwordConfirmRef"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\r\nimport { InputGroup, Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"./AuthContext\"\r\nimport \"./UpdateProfile.css\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport firebase from 'firebase/compat';\r\nconst eye = <FontAwesomeIcon icon={faEye} />;\r\nconst eyeclose = <FontAwesomeIcon icon={faEyeSlash} />;\r\n\r\nexport default function UpdateProfile() {\r\n  const nameRef = useRef()\r\n  const madhabRef = useRef()\r\n  const countryRef = useRef()\r\n  const cityRef = useRef()\r\n  const { currentUser } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  useEffectuseEffect(() => {\r\n    var link = \"http://127.0.0.1:3000/user/\";\r\n        link = link.concat(selectedEmotion.target.outerText).toLowerCase();\r\n        document.getElementById(\"dropdown-basic\").innerHTML = selectedEmotion.target.outerText;\r\n        fetch(link)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setDisplayDuaInfos(result.data.duas);\r\n                }\r\n            )\r\n  }, []);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\")\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"emotionBox2\">\r\n        <Card.Body>\r\n          <h1 className=\"text-center mb-4\">Update Profile</h1>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                ref={nameRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control className=\"pass-wrapper\" type={passwordShown ? \"text\" : \"password\"} ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>\r\n                  <i onClick={togglePasswordVisiblity}>{passwordShown ? eye : eyeclose}</i>\r\n                </InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control className=\"pass-wrapper\" type={passwordShown ? \"text\" : \"password\"} ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>\r\n                  <i onClick={togglePasswordVisiblity}>{passwordShown ? eye : eyeclose}</i>\r\n                </InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-2\">\r\n            <Link to=\"/\">Cancel</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}