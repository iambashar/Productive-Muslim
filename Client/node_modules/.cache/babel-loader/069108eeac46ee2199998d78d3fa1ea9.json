{"ast":null,"code":"var _jsxFileName = \"D:\\\\Temp\\\\Code_Playground\\\\HTML\\\\Productive-Muslim\\\\Client\\\\src\\\\components\\\\Authentication\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { InputGroup, Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"./AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./Register.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport firebase from 'firebase/compat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst eye = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faEye\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 13\n}, this);\n\nconst eyeclose = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faEyeSlash\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 18\n}, this);\n\nexport default function Signup() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n\n      if (firebase.auth().currentUser !== null) {\n        const user = firebase.auth().currentUser;\n        var uid = user.uid;\n        var name = \"\";\n        var email = user.email;\n        var madhab = 'Hanafi';\n        var country = 'Bangladesh';\n        var city = 'Dhaka';\n        fetch('http://localhost:3000/adduser', {\n          method: 'POST',\n          body: JSON.stringify({\n            uid,\n            name,\n            email,\n            madhab,\n            country,\n            city\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        });\n      }\n\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"emotionBox2\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center mb-4\",\n          children: \"Create an Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"pass-wrapper\",\n                type: passwordShown ? \"text\" : \"password\",\n                ref: passwordRef,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    onClick: togglePasswordVisiblity,\n                    children: passwordShown ? eye : eyeclose\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password Confirmation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"pass-wrapper\",\n                type: passwordShown ? \"text\" : \"password\",\n                ref: passwordConfirmRef,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    onClick: togglePasswordVisiblity,\n                    children: passwordShown ? eye : eyeclose\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 text-center mt-2\",\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Signup, \"jZ5MmhNYLhO65Meu8VludtiL128=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["D:/Temp/Code_Playground/HTML/Productive-Muslim/Client/src/components/Authentication/Register.js"],"names":["React","useRef","useState","InputGroup","Form","Button","Card","Alert","useAuth","Link","useHistory","FontAwesomeIcon","faEye","faEyeSlash","firebase","eye","eyeclose","Signup","emailRef","passwordRef","passwordConfirmRef","signup","error","setError","loading","setLoading","history","passwordShown","setPasswordShown","handleSubmit","e","preventDefault","current","value","auth","currentUser","user","uid","name","email","madhab","country","city","fetch","method","body","JSON","stringify","headers","push","togglePasswordVisiblity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,MAA3B,EAAmCC,IAAnC,EAAyCC,KAAzC,QAAsD,iBAAtD;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAO,gBAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,KAAT,QAAsB,mCAAtB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,OAAOC,QAAP,MAAqB,iBAArB;;;;AACA,MAAMC,GAAG,gBAAG,QAAC,eAAD;AAAiB,EAAA,IAAI,EAAEH;AAAvB;AAAA;AAAA;AAAA;AAAA,QAAZ;;AACA,MAAMI,QAAQ,gBAAG,QAAC,eAAD;AAAiB,EAAA,IAAI,EAAEH;AAAvB;AAAA;AAAA;AAAA;AAAA,QAAjB;;AAEA,eAAe,SAASI,MAAT,GAAkB;AAAA;;AAC/B,QAAMC,QAAQ,GAAGjB,MAAM,EAAvB;AACA,QAAMkB,WAAW,GAAGlB,MAAM,EAA1B;AACA,QAAMmB,kBAAkB,GAAGnB,MAAM,EAAjC;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAAab,OAAO,EAA1B;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMwB,OAAO,GAAGhB,UAAU,EAA1B;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoC1B,QAAQ,CAAC,KAAD,CAAlD;;AAEA,iBAAe2B,YAAf,CAA4BC,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIZ,WAAW,CAACa,OAAZ,CAAoBC,KAApB,KAA8Bb,kBAAkB,CAACY,OAAnB,CAA2BC,KAA7D,EAAoE;AAClE,aAAOV,QAAQ,CAAC,wBAAD,CAAf;AACD;;AAED,QAAI;AACFA,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMJ,MAAM,CAACH,QAAQ,CAACc,OAAT,CAAiBC,KAAlB,EAAyBd,WAAW,CAACa,OAAZ,CAAoBC,KAA7C,CAAZ;;AACA,UAAInB,QAAQ,CAACoB,IAAT,GAAgBC,WAAhB,KAAgC,IAApC,EAA0C;AACxC,cAAMC,IAAI,GAAGtB,QAAQ,CAACoB,IAAT,GAAgBC,WAA7B;AACA,YAAIE,GAAG,GAAGD,IAAI,CAACC,GAAf;AACA,YAAIC,IAAI,GAAG,EAAX;AACA,YAAIC,KAAK,GAAGH,IAAI,CAACG,KAAjB;AACA,YAAIC,MAAM,GAAG,QAAb;AACA,YAAIC,OAAO,GAAG,YAAd;AACA,YAAIC,IAAI,GAAG,OAAX;AACAC,QAAAA,KAAK,CAAC,+BAAD,EAAkC;AACnCC,UAAAA,MAAM,EAAE,MAD2B;AAEnCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,YAAAA,GAAF;AAAOC,YAAAA,IAAP;AAAaC,YAAAA,KAAb;AAAoBC,YAAAA,MAApB;AAA4BC,YAAAA,OAA5B;AAAqCC,YAAAA;AAArC,WAAf,CAF6B;AAGnCM,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AAH0B,SAAlC,CAAL;AAOD;;AACDtB,MAAAA,OAAO,CAACuB,IAAR,CAAa,GAAb;AACD,KArBD,CAqBE,MAAM;AACN1B,MAAAA,QAAQ,CAAC,6BAAD,CAAR;AACD;;AAEDE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,QAAMyB,uBAAuB,GAAG,MAAM;AACpCtB,IAAAA,gBAAgB,CAACD,aAAa,GAAG,KAAH,GAAW,IAAzB,CAAhB;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,6BACE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGL,KAAK,iBAAI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA,oBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFZ,eAGE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEO,YAAhB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAC,OAAf;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,OAAnB;AAA2B,cAAA,GAAG,EAAEX,QAAhC;AAA0C,cAAA,QAAQ;AAAlD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAC,UAAf;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,UAAD;AAAA,sCACA,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,SAAS,EAAC,cAAxB;AAAuC,gBAAA,IAAI,EAAES,aAAa,GAAG,MAAH,GAAY,UAAtE;AAAkF,gBAAA,GAAG,EAAER,WAAvF;AAAoG,gBAAA,QAAQ;AAA5G;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA,QAAC,UAAD,CAAY,MAAZ;AAAA,uCACE,QAAC,UAAD,CAAY,IAAZ;AAAA,yCACE;AAAG,oBAAA,OAAO,EAAE+B,uBAAZ;AAAA,8BAAsCvB,aAAa,GAAGZ,GAAH,GAASC;AAA5D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAgBE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAC,kBAAf;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,UAAD;AAAA,sCACA,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,SAAS,EAAC,cAAxB;AAAuC,gBAAA,IAAI,EAAEW,aAAa,GAAG,MAAH,GAAY,UAAtE;AAAkF,gBAAA,GAAG,EAAEP,kBAAvF;AAA2G,gBAAA,QAAQ;AAAnH;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA,QAAC,UAAD,CAAY,MAAZ;AAAA,uCACE,QAAC,UAAD,CAAY,IAAZ;AAAA,yCACE;AAAG,oBAAA,OAAO,EAAE8B,uBAAZ;AAAA,8BAAsCvB,aAAa,GAAGZ,GAAH,GAASC;AAA5D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF,eA2BE,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAEQ,OAAlB;AAA2B,YAAA,SAAS,EAAC,OAArC;AAA6C,YAAA,IAAI,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAkCE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,+DAC2B,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4CD;;GA7FuBP,M;UAIHT,O,EAGHE,U;;;KAPMO,M","sourcesContent":["import React, { useRef, useState } from \"react\"\r\nimport { InputGroup, Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"./AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport \"./Register.css\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport firebase from 'firebase/compat';\r\nconst eye = <FontAwesomeIcon icon={faEye} />;\r\nconst eyeclose = <FontAwesomeIcon icon={faEyeSlash} />;\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n  const [passwordShown, setPasswordShown] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      if (firebase.auth().currentUser !== null) {\r\n        const user = firebase.auth().currentUser;\r\n        var uid = user.uid;\r\n        var name = \"\";\r\n        var email = user.email;\r\n        var madhab = 'Hanafi';\r\n        var country = 'Bangladesh';\r\n        var city = 'Dhaka';\r\n        fetch('http://localhost:3000/adduser', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ uid, name, email, madhab, country, city }),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        });\r\n      }\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"emotionBox2\">\r\n        <Card.Body>\r\n          <h1 className=\"text-center mb-4\">Create an Account</h1>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <InputGroup>\r\n              <Form.Control className=\"pass-wrapper\" type={passwordShown ? \"text\" : \"password\"} ref={passwordRef} required />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>\r\n                  <i onClick={togglePasswordVisiblity}>{passwordShown ? eye : eyeclose}</i>\r\n                </InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <InputGroup>\r\n              <Form.Control className=\"pass-wrapper\" type={passwordShown ? \"text\" : \"password\"} ref={passwordConfirmRef} required />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>\r\n                  <i onClick={togglePasswordVisiblity}>{passwordShown ? eye : eyeclose}</i>\r\n                </InputGroup.Text>\r\n              </InputGroup.Append>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-2\">\r\n            Already have an account? <Link to=\"/login\">Log In</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}